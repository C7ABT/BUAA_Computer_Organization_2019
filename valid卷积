.data
data1: .word 150
data2: .word 150
data3: .word 150


	li	$s0, 0	# m1
	li	$s1, 0	# n1
	li	$s2, 0	# m2
	li	$s3, 0	# n2
	li	$t0, 0	# i
	li	$t1, 0	# j
	li	$t2, 0	# k
	li	$s4, 0	# data1_element
	li	$s5, 0	# data2_element
	li	$s6, 0	# data3_element_temp
	li	$s7, 0  # data3_element
	li	$t3, 0	# data1_address
	li	$t4, 0  # data2_address
	li	$t5, 0  # data3_address
	li	$t8, 0	# h
	li	$t9, 0
	

	
.text
	li	$v0, 5
	syscall
	move	$s0, $v0
	li	$v0, 5
	syscall
	move	$s1, $v0
	li	$v0, 5
	syscall
	move	$s2, $v0
	li	$v0, 5
	syscall
	move	$s3, $v0
	
	sub	$t6, $s0, $s2
	addi	$t6, $t6, 1	# m3
	
	sub	$t7, $s1, $s3
	addi	$t7, $t7, 1	# n3
	
	
	
	
pre1:
	li	$v0, 5
	syscall
	move	$s4, $v0
	mult	$t0, $s1
	mflo	$t3
	add	$t3, $t3, $t1
	sll	$t3, $t3, 2
	sw	$s4, data1($t3)
	
	addi	$t1, $t1, 1
	bne	$t1, $s1, pre1
	move	$t1, $0
	addi	$t0, $t0, 1
	bne	$t0, $s0, pre1
	move	$t1, $0
	move	$t0, $0
	
pre2:
	li	$v0, 5
	syscall
	move	$s4, $v0
	mult	$t0, $s3
	mflo	$t3
	add	$t3, $t3, $t1
	sll	$t3, $t3, 2
	sw	$s4, data2($t3)
	
	addi	$t1, $t1, 1
	bne	$t1, $s3, pre2
	move	$t1, $0
	addi	$t0, $t0, 1
	bne	$t0, $s2, pre2
	move	$t1, $0
	move	$t0, $0
	

alu:
	add	$t9, $t0, $t2
	mult	$t9, $s1
	mflo	$t3
	add	$t3, $t3, $t1
	add	$t3, $t3, $t8
	sll	$t3, $t3, 2	# get the address of a[i + k][j + h]
	
	mult	$t2, $s3
	mflo	$t4
	add	$t4, $t4, $t8
	sll	$t4, $t4, 2	# get the address of b[k][h]
	
	lw	$s4, data1($t3)
	lw	$s5, data2($t4)	
	
	mult	$s4, $s5
	mflo	$s6		# OVERFLOW??????????????????????
	add	$s7, $s7, $s6
	addi	$t8, $t8, 1	# h++
	bne	$t8, $s3, alu	# h == n2
	move	$t8, $0		# h = 0
	addi	$t2, $t2, 1	# k++
	bne	$t2, $s2, alu	# k == m2
	mult	$t0, $t7
	mflo	$t5
	add	$t5, $t5, $t1	# i * n3 + j
	sll	$t5, $t5, 2	# get the position of data3[i][j]
	sw	$s7, data3($t5)
	move	$s7, $0
	move	$t2, $0
	move	$t8, $0
	addi	$t1, $t1, 1	# j++
	bne	$t1, $t7, alu
	move	$t1, $0
			
	addi	$t0, $t0, 1	# i++
	bne	$t0, $t6, alu
	move	$t1, $0
	move	$t0, $0

print:
	mult	$t0, $t7
	mflo	$t5
	add	$t5, $t5, $t1	# get the index of data3[i][j]
	sll	$t5, $t5, 2
	lw	$a0, data3($t5)
	li	$v0, 1
	syscall
	li	$v0, 11
	la	$a0, ' '
	syscall
	addi	$t1, $t1, 1
	bne	$t1, $t7, print
	move	$t1, $0
	li	$v0, 11
	la	$a0, '\n'
	syscall
	addi	$t0, $t0, 1
	bne	$t0, $t6, print
	li	$v0, 10
	syscall
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
